{"version":3,"file":"component---src-templates-course-page-tsx-cfafbb5b84ab9a79677a.js","mappings":"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","sources":["webpack://website/./src/components/course-layout.tsx","webpack://website/./src/templates/course-page.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { ICourse, ICourseGroup } from '../templates/course-page';\n\nimport { rhythm } from '../utils/typography';\n\ninterface ICourseLayoutProps {\n  courses: ICourse[];\n  courseGroups: ICourseGroup[];\n  padTop: boolean;\n  children?: React.ReactNode\n}\n\nconst CourseLayout: React.FunctionComponent<ICourseLayoutProps> = ({\n  courses,\n  children,\n  padTop\n}) => {\n  const header = (\n    <ul className={padTop ? \"course-tabs pad-top\" : \"course-tabs\"}>\n      {courses.filter(c => c.visibleInTopNav).map((c) => (\n        <li key={c.id} className=\"course-tab\">\n          <Link\n            activeClassName=\"active\"\n            style={{\n              boxShadow: `none`,\n              color: `inherit`,\n            }}\n            to={`/course/${c.id}`}\n          >\n            {c.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <div\n      className='course-page'\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(30),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>Â© {new Date().getFullYear()} All Rights Reserved.</footer>\n    </div>\n  );\n};\n\nexport default CourseLayout;\n","import { Link, graphql } from 'gatsby';\nimport * as React from 'react';\nimport Bio from '../components/bio';\nimport CourseLayout from '../components/course-layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nexport interface ICourseGroup {\n  id: string;\n  name: string;\n  topNavOrder: number;\n  courseIndexOrder: number;\n  currentCourse: string;\n  courses: string[];\n}\nexport interface ICourse {\n  id: string;\n  name: string;\n  visibleInTopNav: boolean;\n  visibleInCourseIndex: boolean;\n  visibleInCoursePage: boolean;\n  squareImage: string;\n  facebookImage: string;\n  twitterImage: string;\n  femCourseUrl: string;\n  femCoursePublished: boolean;\n  femWorkshopUrl: string;\n  femWorkshopPublished: boolean;\n  summary: string;\n}\n\ninterface ICourseTemplateProps {\n  pageContext: ICourse;\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        courses: ICourse[];\n        courseGroups: ICourseGroup[];\n      };\n    };\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string;\n          frontmatter: {\n            title: string;\n            course: string;\n            date: string;\n            isExercise: boolean;\n            order: number;\n            description: string;\n          };\n          fields: { slug: string; course: string };\n        };\n      }[];\n    };\n  };\n}\n\nfunction formatOrder(n: number): string {\n  if (n < 10) return `0${n}`;\n  return `${n}`;\n}\n\nconst CoursePageTemplate: React.FunctionComponent<\n  ICourseTemplateProps\n> = ({ pageContext: course, data }): JSX.Element => {\n  if (!course) throw new Error('no course');\n\n  const { courses, courseGroups } = data.site.siteMetadata;\n  const posts = data.allMarkdownRemark.edges;\n  let urlBanner: JSX.Element | null = null;\n  const { femCoursePublished, femCourseUrl, femWorkshopPublished, femWorkshopUrl } = course;\n\n  if (femCourseUrl) {\n    if (femCoursePublished) {\n      urlBanner = (\n        <p className=\"fem-course-banner\">\n          <img className='fem-logo' src=\"/fem-logo.png\" />\n          View the Frontend Masters video course for{' '}\n          {course.name}{' '}\n          <a href={femCourseUrl} target=\"_blank\">\n            here\n          </a>\n        </p>\n      );\n    } else if (femWorkshopPublished) {\n      urlBanner = (\n        <p className=\"fem-course-banner\">\n          <img className='fem-logo' src=\"/fem-logo.png\" />\n          View the Frontend Masters workshop for{' '}\n          {course.name}{' '}\n          <a href={femWorkshopUrl} target=\"_blank\">\n            here\n          </a>\n        </p>\n      );\n    }\n  }\n  return (\n    <CourseLayout courses={courses} courseGroups={courseGroups} padTop={!!urlBanner}>\n      <SEO\n        title={course.name}\n        description={course.summary}\n        twitterImage={course.twitterImage}\n        facebookImage={course.facebookImage}\n      />\n      {urlBanner}\n      <header>\n        <img\n          style={{ float: 'right', margin: 8 }}\n          width={175}\n          src={course.squareImage}\n        />\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {course.name}\n        </h1>\n      </header>\n      <section style={{ marginTop: '10px' }}>\n        {course.summary}\n      </section>\n      {posts\n        .filter(\n          (p) => p.node.frontmatter.course === course.id,\n        )\n        .sort(\n          (a, b) =>\n            a.node.frontmatter.order -\n            b.node.frontmatter.order,\n        )\n        .map(({ node }, idx) => {\n          const title =\n            node.frontmatter.title || node.fields.slug;\n          const { isExercise } = node.frontmatter;\n          return (\n            <article\n              className={\n                'course-article' +\n                (isExercise ? ' exercise' : '')\n              }\n              key={node.fields.slug}\n            >\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link\n                    style={{ boxShadow: `none` }}\n                    to={node.fields.slug}\n                  >\n                    <span className=\"course-article__order\">\n                      {formatOrder(idx + 1)}\n                    </span>\n                    <span className=\"course-article__title\">\n                      {title}\n                    </span>\n                  </Link>\n                </h3>\n                <small className=\"course-article__date\">\n                  {node.frontmatter.date}\n                </small>\n              </header>\n              <section>\n                <p\n                  className=\"course-article__description\"\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      node.frontmatter.description ||\n                      node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          );\n        })}\n\n      <footer>\n        <Bio />\n      </footer>\n    </CourseLayout>\n  );\n};\n\nexport default CoursePageTemplate;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        courseGroups {\n          id\n          topNavOrder\n          courseIndexOrder\n          currentCourse\n          courses\n        }\n        courses {\n          id\n          name\n          summary\n          squareImage\n          facebookImage\n          twitterImage\n          femCourseUrl\n          femCoursePublished\n          femWorkshopPublished\n          femWorkshopUrl\n          visibleInTopNav\n          visibleInCourseIndex\n          visibleInCoursePage\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: ASC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            order\n            isExercise\n            course\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","courses","children","padTop","header","React","className","filter","c","visibleInTopNav","map","key","id","Link","activeClassName","style","boxShadow","color","to","name","marginLeft","marginRight","maxWidth","rhythm","padding","Date","getFullYear","pageContext","course","data","Error","courseGroups","site","siteMetadata","posts","allMarkdownRemark","edges","urlBanner","femCoursePublished","femCourseUrl","femWorkshopPublished","femWorkshopUrl","src","href","target","CourseLayout","SEO","title","description","summary","twitterImage","facebookImage","float","margin","width","squareImage","marginTop","marginBottom","p","node","frontmatter","sort","a","b","order","_ref2","idx","fields","slug","isExercise","n","date","dangerouslySetInnerHTML","__html","excerpt","Bio"],"sourceRoot":""}