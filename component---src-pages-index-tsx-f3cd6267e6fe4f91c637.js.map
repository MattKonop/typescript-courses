{"version":3,"file":"component---src-pages-index-tsx-f3cd6267e6fe4f91c637.js","mappings":"yIA2EA,IA/DsD,SAAC,GAIhD,IAEDA,EALJC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SA4CA,OAtCEH,EAJY,MAGVC,EAASG,SAET,sBACEC,MAAK,kBACAC,EAAAA,EAAAA,IAAM,KADN,CAEHC,cAAcC,EAAAA,EAAAA,IAAO,KACrBC,UAAW,KAGb,gBAAC,EAAAC,KAAD,CACEL,MAAO,CACLM,UAAU,OACVC,MAAM,WAERC,GAAE,KAEDX,IAML,sBACEG,MAAO,CACLI,UAAW,IAGb,gBAAC,EAAAC,KAAD,CACEL,MAAO,CACLM,UAAU,OACVC,MAAM,WAERC,GAAE,KAEDX,IAMP,uBACEG,MAAO,CACLS,WAAW,OACXC,YAAY,OACZC,UAAUR,EAAAA,EAAAA,IAAO,IACjBS,SAAYT,EAAAA,EAAAA,IAAO,KAAZ,KAAoBA,EAAAA,EAAAA,IAAO,EAAI,KAGxC,8BAASR,GACT,4BAAOG,GACP,oCAAW,IAAIe,MAAOC,cAAtB,wBAGL,C,6FCED,UArC4D,SAAC,GAGtD,IAFLC,EAEI,EAFJA,KACAnB,EACI,EADJA,SAEMoB,EAAYD,EAAKE,KAAKC,aAAarB,MACnCsB,EAAUJ,EAAKE,KAAKC,aAAaC,QAGvC,OACE,gBAAC,IAAD,CAAQvB,SAAUA,EAAUC,MAAOmB,GACjC,gBAAC,IAAD,CAAKnB,MAAM,YACX,gBAAC,IAAD,MACCsB,EAAQC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,QAAP,IAAiBC,KAAI,YAA0C,IAAvC1B,EAAsC,EAAtCA,MAAO2B,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAC/D,OACE,2BAASC,UAAU,iBAAiBC,IAAKJ,GACvC,8BACE,sBACExB,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,uBAAKH,MAAO,CAAC6B,MAAO,SAAUC,MAAO,IAAKC,IAAKN,IAC/C,gBAAC,EAAApB,KAAD,CAAML,MAAO,CAAEM,UAAU,QAAWE,GAAE,UAAYgB,GAC/C3B,KAIP,+BACE,yBAAI6B,IAIX,IAGN,C","sources":["webpack://website/./src/components/layout.tsx","webpack://website/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\n\ninterface ILayoutProps {\n  location: {\n    pathname: string;\n  };\n  title: string;\n}\n\nconst Layout: React.FunctionComponent<ILayoutProps> = ({\n  location,\n  title,\n  children,\n}) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3\n        style={{\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(30),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>Â© {new Date().getFullYear()} All Rights Reserved</footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\n\ninterface IBlogIndexProps {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string;\n          frontmatter: { title: string; date: string; description: string };\n          fields: { slug: string };\n        };\n      }[];\n    };\n    site: {\n      siteMetadata: {\n        title: string;\n        courses: {\n          id: string;\n          title: string;\n          summary: string;\n          squareImage: string;\n          disabled: boolean;\n        }[];\n      };\n    };\n  };\n  location: {\n    pathname: string;\n  };\n}\n\nconst BlogIndex: React.FunctionComponent<IBlogIndexProps> = ({\n  data,\n  location,\n}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const courses = data.site.siteMetadata.courses;\n  // const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Courses\" />\n      <Bio />\n      {courses.filter(c => !c.disabled).map(({ title, id, squareImage, summary }) => {\n        return (\n          <article className='course-summary' key={id}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <img style={{float: 'right'}} width={150} src={squareImage} />\n                <Link style={{ boxShadow: `none` }} to={`course/${id}`}>\n                  {title}\n                </Link>\n              </h3>\n            </header>\n            <section>\n              <p>{summary}</p>\n            </section>\n          </article>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        courses {\n          id\n          title\n          summary\n          squareImage\n          facebookImage\n          twitterImage\n          femCourseUrl\n          femCoursePublished\n          disabled\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___order], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            order\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["header","location","title","children","pathname","style","scale","marginBottom","rhythm","marginTop","Link","boxShadow","color","to","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","data","siteTitle","site","siteMetadata","courses","filter","c","disabled","map","id","squareImage","summary","className","key","float","width","src"],"sourceRoot":""}