{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/course/making-typescript-stick/06-jquery-challenge/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","name":"TypeScript Fundamentals v3","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"fundamentals-v4","name":"TypeScript Fundamentals v4","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","name":"Intermediate TypeScript","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"making-typescript-stick","name":"Making TypeScript Stick","summary":"Tackle a series of challenges designed to reinforce your knowledge and make\nthe important concepts truly \"stick\" in your mind.\n"},{"id":"enterprise-v2","name":"Enterprise TypeScript v2","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"},{"id":"full-stack-typescript","name":"Full Stack TypeScript","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"},{"id":"intermediate-v2","name":"Intermediate TypeScript","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"}]}},"markdownRemark":{"id":"f89c917a-21fc-531c-aabc-be8c72076931","excerpt":"What’s a jQuery? Back in the age of inconsistent DOM APIs (I’m looking at you IE6)\nthere arose a dominant solution that allowed us to do things\nvery similar to…","html":"<h2 id=\"whats-a-jquery\" style=\"position:relative;\"><a href=\"#whats-a-jquery\" aria-label=\"whats a jquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What’s a jQuery?</h2>\n<p>Back in the age of inconsistent DOM APIs (I’m looking at you IE6)\nthere arose a <em>dominant</em> solution that allowed us to do things\nvery similar to <code>document.querySelector</code> and many other things.</p>\n<h2 id=\"the-challenge\" style=\"position:relative;\"><a href=\"#the-challenge\" aria-label=\"the challenge permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Challenge</h2>\n<p>We’re going to write our own version of <em>part of</em> this API surface, <em>with types!</em>.</p>\n<p>Here are some slightly modified code snippets from the jQuery <a href=\"https://jquery.com/\">getting started page</a></p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='const $: any' >$</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">any</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #6E7781\">/**</span></div><div class='line'><span style=\"color: #6E7781\"> * Get the &lt;button&gt; element with the class &apos;continue&apos;</span></div><div class='line'><span style=\"color: #6E7781\"> * and change its HTML to &apos;Next Step...&apos;</span></div><div class='line'><span style=\"color: #6E7781\"> */</span></div><div class='line'><span style=\"color: #8250DF\"><data-lsp lsp='const $: any' >$</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\"button.continue\"</span><span style=\"color: #24292F\">).</span><span style=\"color: #8250DF\"><data-lsp lsp='any' >html</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\"Next Step...\"</span><span style=\"color: #24292F\">)</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #6E7781\">/**</span></div><div class='line'><span style=\"color: #6E7781\"> * Show the #banner-message element that is hidden with visibility:\"hidden\" in</span></div><div class='line'><span style=\"color: #6E7781\"> * its CSS when any button in #button-container is clicked.</span></div><div class='line'><span style=\"color: #6E7781\"> */</span></div><div class='line'><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='const hiddenBox: any' >hiddenBox</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='const $: any' >$</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\"#banner-message\"</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #8250DF\"><data-lsp lsp='const $: any' >$</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\"#button-container button\"</span><span style=\"color: #24292F\">).</span><span style=\"color: #8250DF\"><data-lsp lsp='any' >on</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\"click\"</span><span style=\"color: #24292F\">, (</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) event: any' >event</data-lsp></span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">=&gt;</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='const hiddenBox: any' >hiddenBox</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='any' >show</data-lsp></span><span style=\"color: #24292F\">()</span></div><div class='line'><span style=\"color: #24292F\">})</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #6E7781\">/**</span></div><div class='line'><span style=\"color: #6E7781\"> * Make an API call and fill a &lt;div id=\"post-info\"&gt;</span></div><div class='line'><span style=\"color: #6E7781\"> * with the response data</span></div><div class='line'><span style=\"color: #6E7781\"> */</span></div><div class='line'><span style=\"color: #24292F\"><data-lsp lsp='const $: any' >$</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='any' >ajax</data-lsp></span><span style=\"color: #24292F\">({</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(property) url: string' >url</data-lsp>: </span><span style=\"color: #0A3069\">\"https://jsonplaceholder.typicode.com/posts/33\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #8250DF\"><data-lsp lsp='(property) success: (result: any) => void' >success</data-lsp></span><span style=\"color: #24292F\">: (</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) result: any' >result</data-lsp></span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">=&gt;</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #8250DF\"><data-lsp lsp='const $: any' >$</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\"#post-info\"</span><span style=\"color: #24292F\">).</span><span style=\"color: #8250DF\"><data-lsp lsp='any' >html</data-lsp></span><span style=\"color: #24292F\">(</span></div><div class='line'><span style=\"color: #24292F\">      </span><span style=\"color: #0A3069\">\"&lt;strong&gt;\"</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">+</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) result: any' >result</data-lsp>.<data-lsp lsp='any' >title</data-lsp> </span><span style=\"color: #CF222E\">+</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"&lt;/strong&gt;\"</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">+</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) result: any' >result</data-lsp>.<data-lsp lsp='any' >body</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">    )</span></div><div class='line'><span style=\"color: #24292F\">  },</span></div><div class='line'><span style=\"color: #24292F\">})</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEDsHsEkFsAOAbAlgY1QFwIKQJ4BcoAZgIbIDOApgFDrSSVagAkxZBoAvKAN4BfWrWAAqUbVCjQAcWossAC2qgAPACMArliyMAfKGrJq8apBYB3bItBKV6ZGUqVQAcgbnUkTdVeTpnAAmoOiKnADmKtguABIAKgCyADK20G4ActQAHiwAyljUiAB0JX5SwLSsABQARFo6jEUeWF4+NQCURYpY8Mi1mTmg+YUlRR3CYhJSQ4rQFrbKoADE6pyQ1ABOALSmzmSRhsam5gtkLKguiqiBgWagVkqgAG4XqOqoaFhENVc3ZjWgLz+QFYFwAYVyuXuykgoE4+FA9V0sK8yyRjC2zTIXk2gJcDgwAGtqIEiv4Kh5mKBfrdIAAhaBZHhsWorNabHbUPaRcbVGorbTIzGMLDY9YbRGCxgdIqMWoE9CEmoAGlAVWoTzMWHaPAMfEk1OutIZWSKlFmFiq7VoAmtInEwISZGJcNhOAACrAQhRkK7giQPr6yGpAqgnoDAtwaohoMwtl4SNAanpgQ8bHZQBsuTGmCpAmcyOTKkUyAArMhZKr60CgTQbZDEH46RCUQggUuURgoMjoaizZC3DZFL6IDDQW5NaDwYAx5iUYAAZgXKoNlE06F7zmIVSza+Q2t1-ANNb5S1nWHjkETMu6vSqx5roBqqmYG0Y4T0AIA1JmuZp98O2DGKAP7PsAr7vp+IG-nuWBFOo474A+1o1gIyo2u0QA'>Try</a></div></pre>\n<p>You’re going to define something that emulates this kind of behavior.</p>\n<h2 id=\"setup\" style=\"position:relative;\"><a href=\"#setup\" aria-label=\"setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h2>\n<p>First, if you haven’t done so already, clone the workshop project\nfor this course</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">git clone https://github.com/mike-north/making-typescript-stick</span></div><div class='line'><span style=\"color: #0550AE\">cd</span><span style=\"color: #24292F\"> making-typescript-stick</span></div></code></div></pre>\n<p>Make sure you have <a href=\"https://volta.sh/\">Volta</a> installed. If you haven’t\ndone so already, just run the following to install it</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">curl https://get.volta.sh </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> bash</span></div></code></div></pre>\n<p>Next, let’s install our dependencies</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">yarn</span></div></code></div></pre>\n<p>and finally, let’s navigate to the folder containing this specific challenge</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #0550AE\">cd</span><span style=\"color: #24292F\"> challenges/jquery-clone</span></div></code></div></pre>\n<p>You can now run the test suite to see if you’ve defined an “equivalent” API\nsurface. Your job is to modify the code in <code>./src/index.ts</code> until all of the existing\ntests pass.</p>\n<h2 id=\"hints\" style=\"position:relative;\"><a href=\"#hints\" aria-label=\"hints permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hints</h2>\n<ul>\n<li>For the <code>$.ajax</code> function, make sure to take advantage of <code>node-fetch</code></li>\n</ul>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">import</span><span style=\"color: #24292F\"> { </span><span style=\"color: #CF222E\">default</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">as</span><span style=\"color: #24292F\"> fetch } </span><span style=\"color: #CF222E\">from</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"node-fetch\"</span></div></code></div></pre>\n<ul>\n<li>Remember that we can stack a namespace on top of a function</li>\n</ul>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function $(): void&#10;namespace $' >$</data-lsp></span><span style=\"color: #24292F\">() {}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">namespace</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='namespace $&#10;function $(): void' >$</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">export</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function $.ajax(): void' >ajax</data-lsp></span><span style=\"color: #24292F\">() {}</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">export</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function $.html(): void' >html</data-lsp></span><span style=\"color: #24292F\">() {}</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">export</span><span style=\"color: #953800\"> </span><span style=\"color: #CF222E\">default</span><span style=\"color: #953800\"> </span><span style=\"color: #24292F\"><data-lsp lsp='namespace $&#10;function $(): void' >$</data-lsp></span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/GYVwdgxgLglg9mABAEgBQEpEG8C+AoPMAQwFsBTAZwAciIyVs9FEyAPKuAJykVElgSIiAKyKsM2fMzYduvcNHhIAFlBIAbCbjz48MrjwAmZYERDqeyIA'>Try</a></div></pre>","tableOfContents":"<ul>\n<li><a href=\"#whats-a-jquery\">What’s a jQuery?</a></li>\n<li><a href=\"#the-challenge\">The Challenge</a></li>\n<li><a href=\"#setup\">Setup</a></li>\n<li><a href=\"#hints\">Hints</a></li>\n</ul>","fields":{"slug":"/course/making-typescript-stick/06-jquery-challenge/"},"frontmatter":{"title":"Challenge 2: Typing jQuery","course":"making-typescript-stick","date":"March 22, 2022","description":"Just for fun (and practice), we'll write our own version of jQuery, built on\ntop of the now standardized DOM APIs.\n"}}},"pageContext":{"slug":"/course/making-typescript-stick/06-jquery-challenge/","title":"Challenge 2: Typing jQuery","course":"making-typescript-stick","order":6,"previous":{"fields":{"slug":"/course/making-typescript-stick/05-does-it-compile/"},"frontmatter":{"title":"Game 1: Does it compile?","order":5,"course":"making-typescript-stick","isExercise":null}},"next":{"fields":{"slug":"/course/making-typescript-stick/07-typepardy/"},"frontmatter":{"title":"Game 2: Typepardy","order":7,"course":"making-typescript-stick","isExercise":null}}}},
    "staticQueryHashes": ["2785745750","2841359383"]}