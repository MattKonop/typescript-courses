{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/course/making-typescript-stick/09-guess-that-type/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","title":"TypeScript Fundamentals v3","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","title":"Intermediate TypeScript","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"making-typescript-stick","title":"Making TypeScript Stick","summary":"Tackle a series of challenges designed to reinforce your knowledge and make\nthe important concepts truly \"stick\" in your mind.\n"},{"id":"full-stack-typescript","title":"Full Stack TypeScript","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"}]}},"markdownRemark":{"id":"668944a6-3ba2-5c72-a491-d13ab0d96a8f","excerpt":"1 2 3 4 5 6 7 8 9 10 11","html":"<h2 id=\"1\" style=\"position:relative;\"><a href=\"#1\" aria-label=\"1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">values</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">3</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">\"14\"</span><span style=\"color: #24292E\">, [</span><span style=\"color: #005CC5\">21</span><span style=\"color: #24292E\">]]</span></div><div class='line'></div><div class='line highlight'><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> a </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> values) {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #6A737D\">//     ^?</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line highlight'><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> b </span><span style=\"color: #D73A49\">of</span><span style=\"color: #24292E\"> values) {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #6A737D\">//     ^?</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const values: (string | number | number[])[]' >values</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">3</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">\"14\"</span><span style=\"color: #24292E\">, [</span><span style=\"color: #005CC5\">21</span><span style=\"color: #24292E\">]]</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let a: string' style='border-bottom: solid 2px lightgrey;'>a</data-lsp> </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> <data-lsp lsp='const values: (string | number | number[])[]' >values</data-lsp>) {</span></div><div class='meta-line'><span class='popover-prefix'>        </span><span class='popover'><div class='arrow'></div>let a: string</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let b: string | number | number[]' style='border-bottom: solid 2px lightgrey;'>b</data-lsp> </span><span style=\"color: #D73A49\">of</span><span style=\"color: #24292E\"> <data-lsp lsp='const values: (string | number | number[])[]' >values</data-lsp>) {</span></div><div class='meta-line'><span class='popover-prefix'>        </span><span class='popover'><div class='arrow'></div>let b: string | number | number[]</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYewdgzgLgBAbgQwDYFcCmEYF4YG0DMANDAEQCMALCcbgExkC6DAUMwGYgBOMAFEmrAQwAlmHjJ0EAJQwA3sxgwA9EsVqAegH5mAX3Zde-WACMYINuNQYZ8xSrWKtuoA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"2\" style=\"position:relative;\"><a href=\"#2\" aria-label=\"2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Person</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">constructor</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">name</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">) {}</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line dim'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Library</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">librarians</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Person</span><span style=\"color: #24292E\">[] </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> []</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line'></div><div class='line highlight'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">localLibrary</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> Library</span></div><div class='line dim'><span style=\"color: #6A737D\">//       ^?</span></div><div class='line highlight'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">otherLibrary</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Library</span><span style=\"color: #24292E\">()</span></div><div class='line dim'><span style=\"color: #6A737D\">//       ^?</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">constructor</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Person.name: string' >name</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">) {}</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='class Library' >Library</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Library.librarians: Person[]' >librarians</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292E\">[] </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> []</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const localLibrary: typeof Library' style='border-bottom: solid 2px lightgrey;'>localLibrary</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> <data-lsp lsp='class Library' >Library</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>           </span><span class='popover'><div class='arrow'></div>const localLibrary: typeof Library</span></div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const otherLibrary: Library' style='border-bottom: solid 2px lightgrey;'>otherLibrary</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='constructor Library(): Library' >Library</data-lsp></span><span style=\"color: #24292E\">()</span></div><div class='meta-line'><span class='popover-prefix'>           </span><span class='popover'><div class='arrow'></div>const otherLibrary: Library</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYGwhgzhAEAKCmAnCB7AdtA3gKGtY6EALogK7BEqIAUADqQEYgCWw0aYAtvAFzTGJmaAOYBKLAF9sU0JBgAZZg0RhEATyy5oLZauZg0EPgmToA2gF1oAXmiXp2bAUNFtKYGBCLd6m9G8q6tgA9MF44XgAegD8ToSuKEQAFkgBqhq2aPAA7v5KgWrUoiFhEVHRQA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"3\" style=\"position:relative;\"><a href=\"#3\" aria-label=\"3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">AsyncManager</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">constructor</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">arg</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">) {</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// @ts-ignore</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (arg </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> arg </span><span style=\"color: #D73A49\">&lt;=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">) {</span></div><div class='line highlight'><span style=\"color: #24292E\">      </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">Promise</span><span style=\"color: #24292E\">((</span><span style=\"color: #E36209\">resolve</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">reject</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">        arg</span></div><div class='line dim'><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">//^?</span></div><div class='line dim'><span style=\"color: #24292E\">      })</span></div><div class='line dim'><span style=\"color: #24292E\">    }</span></div><div class='line dim'><span style=\"color: #24292E\">  }</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='class AsyncManager' >AsyncManager</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">constructor</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\"><data-lsp lsp='(parameter) arg: string | 0 | 4' >arg</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">) {</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (<data-lsp lsp='(parameter) arg: string | 0 | 4' >arg</data-lsp> </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> <data-lsp lsp='(parameter) arg: string | 0 | 4' >arg</data-lsp> </span><span style=\"color: #D73A49\">&lt;=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">) {</span></div><div class='line'><span style=\"color: #24292E\">      </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='var Promise: PromiseConstructor&#10;new &lt;unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise&lt;unknown>' >Promise</data-lsp></span><span style=\"color: #24292E\">((</span><span style=\"color: #E36209\"><data-lsp lsp='(parameter) resolve: (value: unknown) => void' >resolve</data-lsp></span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\"><data-lsp lsp='(parameter) reject: (reason?: any) => void' >reject</data-lsp></span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">        <data-lsp lsp='(parameter) arg: string | 0 | 4' style='border-bottom: solid 2px lightgrey;'>arg</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>        </span><span class='popover'><div class='arrow'></div>(parameter) arg: string | 0 | 4</span></div><div class='line'><span style=\"color: #24292E\">      })</span></div><div class='line'><span style=\"color: #24292E\">    }</span></div><div class='line'><span style=\"color: #24292E\">  }</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYBsBWAUAMYA2AhooqAIKICeAdgQLIl0kDmMoA3nqKAXDqIALtACuBYQgAUJaG1QAGUAB9QAFlWgR0AJZ02ASm68+oXQDNQs+aAB8oZSrVy2oADwBeR8Z5mzdJAA7qAACvAAtrqIkNLS0JCIcEQAbpAANKAJAFaQksaeDn7+Zq6mJaAgAHoA-OVmAL6G9Q2mrQ1AA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"4\" style=\"position:relative;\"><a href=\"#4\" aria-label=\"4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">enum</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">CoinResult</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  heads,</span></div><div class='line dim'><span style=\"color: #24292E\">  tails,</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line dim'><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">flipCoin</span><span style=\"color: #24292E\">()</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">CoinResult</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">Math</span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\">random</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0.5</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> CoinResult.heads</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> CoinResult.tails</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line'></div><div class='line dim'><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">flipResult</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">flipCoin</span><span style=\"color: #24292E\">()</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (flipResult </span><span style=\"color: #D73A49\">===</span><span style=\"color: #24292E\"> CoinResult.heads) {</span></div><div class='line dim'><span style=\"color: #24292E\">    console.</span><span style=\"color: #6F42C1\">log</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"heads\"</span><span style=\"color: #24292E\">)</span></div><div class='line dim'><span style=\"color: #24292E\">  } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (flipResult </span><span style=\"color: #D73A49\">===</span><span style=\"color: #24292E\"> CoinResult.tails) {</span></div><div class='line dim'><span style=\"color: #24292E\">    console.</span><span style=\"color: #6F42C1\">log</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"tails\"</span><span style=\"color: #24292E\">)</span></div><div class='line dim'><span style=\"color: #24292E\">  } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> {</span></div><div class='line highlight'><span style=\"color: #24292E\">    flipResult</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// ^?</span></div><div class='line dim'><span style=\"color: #24292E\">  }</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">enum</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='enum CoinResult' >CoinResult</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  <data-lsp lsp='(enum member) CoinResult.heads = 0' >heads</data-lsp>,</span></div><div class='line'><span style=\"color: #24292E\">  <data-lsp lsp='(enum member) CoinResult.tails = 1' >tails</data-lsp>,</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function flipCoin(): CoinResult' >flipCoin</data-lsp></span><span style=\"color: #24292E\">()</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='enum CoinResult' >CoinResult</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='var Math: Math' >Math</data-lsp></span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\"><data-lsp lsp='(method) Math.random(): number' >random</data-lsp></span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0.5</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> <data-lsp lsp='enum CoinResult' >CoinResult</data-lsp>.<data-lsp lsp='(enum member) CoinResult.heads = 0' >heads</data-lsp></span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> <data-lsp lsp='enum CoinResult' >CoinResult</data-lsp>.<data-lsp lsp='(enum member) CoinResult.tails = 1' >tails</data-lsp></span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function main(): void' >main</data-lsp></span><span style=\"color: #24292E\">() {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const flipResult: CoinResult' >flipResult</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function flipCoin(): CoinResult' >flipCoin</data-lsp></span><span style=\"color: #24292E\">()</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (<data-lsp lsp='const flipResult: CoinResult' >flipResult</data-lsp> </span><span style=\"color: #D73A49\">===</span><span style=\"color: #24292E\"> <data-lsp lsp='enum CoinResult' >CoinResult</data-lsp>.<data-lsp lsp='(enum member) CoinResult.heads = 0' >heads</data-lsp>) {</span></div><div class='line'><span style=\"color: #24292E\">    <data-lsp lsp='var console: Console' >console</data-lsp>.</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"heads\"</span><span style=\"color: #24292E\">)</span></div><div class='line'><span style=\"color: #24292E\">  } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (<data-lsp lsp='const flipResult: CoinResult.tails' >flipResult</data-lsp> </span><span style=\"color: #D73A49\">===</span><span style=\"color: #24292E\"> <data-lsp lsp='enum CoinResult' >CoinResult</data-lsp>.<data-lsp lsp='(enum member) CoinResult.tails = 1' >tails</data-lsp>) {</span></div><div class='line'><span style=\"color: #24292E\">    <data-lsp lsp='var console: Console' >console</data-lsp>.</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"tails\"</span><span style=\"color: #24292E\">)</span></div><div class='line'><span style=\"color: #24292E\">  } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">    <data-lsp lsp='const flipResult: never' style='border-bottom: solid 2px lightgrey;'>flipResult</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>        </span><span class='popover'><div class='arrow'></div>const flipResult: never</span></div><div class='line'><span style=\"color: #24292E\">  }</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/KYOwrgtgBAwg9gSxAJWAZzAGwC5QN4BQUUAFsAIYAmaANEVNuQprQQL4EBmYIAxtgjggonTAgAO8JAAoAlAC5YiFOiy5CxAE7BsYTcICy5bCQB0m8iEpwIcqAD4oABlMBWesQD8SpKgw5TMio0DyhFKRV-bFNGZhCOLh5+QWEIJhA7DSheITRcUQk-NSgAXhExSWU5egROKGkC8SKcUpKyiObooOpZfFCckDQ4TGBTTDgAc2kAIm60adl6NihgFmAoWvrGztb25U6YphZerOIBoZGxyZnYlgWllbW+4mJt1RxQgHpPqAA9TyW7CAA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"5\" style=\"position:relative;\"><a href=\"#5\" aria-label=\"5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getValue</span><span style=\"color: #24292E\">()</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">] </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Promise</span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">&gt; {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #005CC5\">Math</span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\">random</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0.5</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">42</span><span style=\"color: #24292E\">]</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">Promise</span><span style=\"color: #24292E\">.</span><span style=\"color: #6F42C1\">resolve</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">42</span><span style=\"color: #24292E\">)</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line'></div><div class='line dim'><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() {</span></div><div class='line highlight'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">resolved</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getValue</span><span style=\"color: #24292E\">()</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #6A737D\">//     ^?</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function getValue(): [number] | Promise&lt;number>' >getValue</data-lsp></span><span style=\"color: #24292E\">()</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">] </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='interface Promise&lt;T>' >Promise</data-lsp></span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">&gt; {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #005CC5\"><data-lsp lsp='var Math: Math' >Math</data-lsp></span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\"><data-lsp lsp='(method) Math.random(): number' >random</data-lsp></span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0.5</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">42</span><span style=\"color: #24292E\">]</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='var Promise: PromiseConstructor' >Promise</data-lsp></span><span style=\"color: #24292E\">.</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) PromiseConstructor.resolve&lt;number>(value: number | PromiseLike&lt;number>): Promise&lt;number> (+1 overload)' >resolve</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">42</span><span style=\"color: #24292E\">)</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function main(): Promise&lt;void>' >main</data-lsp></span><span style=\"color: #24292E\">() {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const resolved: number | [number]' style='border-bottom: solid 2px lightgrey;'>resolved</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function getValue(): [number] | Promise&lt;number>' >getValue</data-lsp></span><span style=\"color: #24292E\">()</span></div><div class='meta-line'><span class='popover-prefix'>           </span><span class='popover'><div class='arrow'></div>const resolved: number | [number]</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/GYVwdgxgLglg9mABAcwKZQGoEMA2JUAUAlAFyIDaYIAtgEaoBOAuogD6IAKDc1MAzqgA8VOowB8iAN4AoRIhjBEBALJYoACwB0DLGAAmPYogkAGTQFYiiBuhAMk5ACwAmJrMSocA67fuduvALaqHxwOABuhC5E0gC+0tJYfACekIigkLAIiNRYMGBGMnIQCHxQPqERqHqIALyIWADueeVomLj4xO4A9N1y-QB6APxxQA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"6\" style=\"position:relative;\"><a href=\"#6\" aria-label=\"6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> x</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">any</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">41</span></div><div class='line highlight'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">y</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> x</span></div><div class='line dim'><span style=\"color: #6A737D\">//    ^?</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let x: any' >x</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">any</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">41</span></div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const y: any' style='border-bottom: solid 2px lightgrey;'>y</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> <data-lsp lsp='let x: any' >x</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>     </span><span class='popover'><div class='arrow'></div>const y: any</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/DYUwLgBAHgXBB2BXAtgIxAJwgHwgQ3gE8IBeCAFgEYAoAYwHt4BnSYsqagek4l4gD0A-EA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"7\" style=\"position:relative;\"><a href=\"#7\" aria-label=\"7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">values</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">21</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">45</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">32</span><span style=\"color: #24292E\">]</span></div><div class='line'></div><div class='line highlight'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">filtered</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> values.</span><span style=\"color: #6F42C1\">filter</span><span style=\"color: #24292E\">((</span><span style=\"color: #E36209\">val</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> val </span><span style=\"color: #D73A49\">!==</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">)</span></div><div class='line dim'><span style=\"color: #6A737D\">//            ^?</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const values: (number | null)[]' >values</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">21</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">45</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">32</span><span style=\"color: #24292E\">]</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const filtered: (number | null)[]' style='border-bottom: solid 2px lightgrey;'>filtered</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> <data-lsp lsp='const values: (number | null)[]' >values</data-lsp>.</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) Array&lt;number | null>.filter(predicate: (value: number | null, index: number, array: (number | null)[]) => unknown, thisArg?: any): (number | null)[] (+1 overload)' >filter</data-lsp></span><span style=\"color: #24292E\">((</span><span style=\"color: #E36209\"><data-lsp lsp='(parameter) val: number | null' >val</data-lsp></span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> <data-lsp lsp='(parameter) val: number | null' >val</data-lsp> </span><span style=\"color: #D73A49\">!==</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">)</span></div><div class='meta-line'><span class='popover-prefix'>         </span><span class='popover'><div class='arrow'></div>const filtered: (number | null)[]</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYewdgzgLgBAbgQwDYFcCmEYF4YG0AsANDAIzFgpJLEBMZM+ArMQMw0C6AUJ6JLAGYBLJFDQAnNABNs8ZOggA6ISPEAKVYiQBKbAD5ZSGAEIsOClS2cA9FZh37DuwD0A-EA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"8\" style=\"position:relative;\"><a href=\"#8\" aria-label=\"8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Person</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">static</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">species</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"Homo Sapien\"</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">constructor</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">name</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">) {}</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line'></div><div class='line dim'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">p</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Person</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"mike\"</span><span style=\"color: #24292E\">)</span></div><div class='line highlight'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> x</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">keyof</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">typeof</span><span style=\"color: #24292E\"> Person</span></div><div class='line dim'><span style=\"color: #6A737D\">//  ^?</span></div><div class='line highlight'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> y</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">keyof</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">typeof</span><span style=\"color: #24292E\"> p</span></div><div class='line dim'><span style=\"color: #6A737D\">//  ^?</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">static</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Person.species: string' >species</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"Homo Sapien\"</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">constructor</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Person.name: string' >name</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">) {}</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const p: Person' >p</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='constructor Person(name: string): Person' >Person</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"mike\"</span><span style=\"color: #24292E\">)</span></div><div class='line'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let x: \"prototype\" | \"species\"' style='border-bottom: solid 2px lightgrey;'>x</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">keyof</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">typeof</span><span style=\"color: #24292E\"> <data-lsp lsp='class Person' >Person</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>   </span><span class='popover'><div class='arrow'></div>let x: \"prototype\" | \"species\"</span></div><div class='line'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let y: \"name\"' style='border-bottom: solid 2px lightgrey;'>y</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">keyof</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">typeof</span><span style=\"color: #24292E\"> <data-lsp lsp='const p: Person' >p</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>   </span><span class='popover'><div class='arrow'></div>let y: \"name\"</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYGwhgzhAEAKCmAnCB7AdtA3gKGtCALmAQJbD4AO8wJ8MAvNAEQASKAtitAMpgW1omuaMHSFEAV2AEUiABQUJAIxBloaMO3gAufAUQk0AcwCUWAL7ZL2UWkLQK0RmngB3OElRo5TdiQDW8Ewm2CDwBNAAHrqBAJ4oAGbQBLFUiR7I6NgA9Nl4AHoA-KHh0LEx8PFJKWlJFDl50EVAA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"9\" style=\"position:relative;\"><a href=\"#9\" aria-label=\"9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">enum</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Language</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  JavaScript,</span></div><div class='line dim'><span style=\"color: #24292E\">  TypeScript </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"TS\"</span><span style=\"color: #24292E\">,</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line'></div><div class='line highlight'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> lang1</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Language</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> Language.JavaScript</span></div><div class='line dim'><span style=\"color: #6A737D\">//   ^?</span></div><div class='line highlight'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> lang2</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Language</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> Language.TypeScript</span></div><div class='line dim'><span style=\"color: #6A737D\">//   ^?</span></div><div class='line'></div><div class='line dim'><span style=\"color: #005CC5\">Math</span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\">round</span><span style=\"color: #24292E\">(lang1)</span></div><div class='line dim'><span style=\"color: #005CC5\">Math</span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\">round</span><span style=\"color: #24292E\">(lang2)</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">enum</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='enum Language' >Language</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  <data-lsp lsp='(enum member) Language.JavaScript = 0' >JavaScript</data-lsp>,</span></div><div class='line'><span style=\"color: #24292E\">  <data-lsp lsp='(enum member) Language.TypeScript = \"TS\"' >TypeScript</data-lsp> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"TS\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let lang1: Language' style='border-bottom: solid 2px lightgrey;'>lang1</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='enum Language' >Language</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> <data-lsp lsp='enum Language' >Language</data-lsp>.<data-lsp lsp='(enum member) Language.JavaScript = 0' >JavaScript</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>     </span><span class='popover'><div class='arrow'></div>let lang1: Language</span></div><div class='line'><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> <data-lsp lsp='let lang2: Language' style='border-bottom: solid 2px lightgrey;'>lang2</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='enum Language' >Language</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> <data-lsp lsp='enum Language' >Language</data-lsp>.<data-lsp lsp='(enum member) Language.TypeScript = \"TS\"' >TypeScript</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>     </span><span class='popover'><div class='arrow'></div>let lang2: Language</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #005CC5\"><data-lsp lsp='var Math: Math' >Math</data-lsp></span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\"><data-lsp lsp='(method) Math.round(x: number): number' >round</data-lsp></span><span style=\"color: #24292E\">(<data-lsp lsp='let lang1: Language.JavaScript' >lang1</data-lsp>)</span></div><div class='line'><span style=\"color: #005CC5\"><data-lsp lsp='var Math: Math' >Math</data-lsp></span><span style=\"color: #24292E\">.</span><span style=\"color: #005CC5\"><data-lsp lsp='(method) Math.round(x: number): number' >round</data-lsp></span><span style=\"color: #24292E\">(<data-err><data-lsp lsp='let lang2: Language.TypeScript' >lang2</data-lsp></data-err>)</span></div><span class=\"error\"><span>Argument of type 'Language' is not assignable to parameter of type 'number'.</span><span class=\"code\">2345</span></span><span class=\"error-behind\">Argument of type 'Language' is not assignable to parameter of type 'number'.</span></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYAsBWAUJAHYCuAtqADICGhA5sVbZKAN56igBSVAblQMoBjaAEsADgBcANO1AAVAJ5jIQ0ZNABeUACI5-bTIC+ePABtIE0KZq0AjKmp0GTTZRvPIAOm59V4iXggHKAAegD8ZhZWNmgO7ozMWo70CZ6Kyn6SgWAc4SYAslQSABae8MSEACYAFNZ0tgCUeIUlZXAVNXW0aA1AA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"10\" style=\"position:relative;\"><a href=\"#10\" aria-label=\"10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">tryFetch</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">url</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">RequestInfo</span><span style=\"color: #24292E\">) {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">val</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">fetch</span><span style=\"color: #24292E\">(url)).</span><span style=\"color: #6F42C1\">json</span><span style=\"color: #24292E\">()</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> val</span></div><div class='line dim'><span style=\"color: #24292E\">  } </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (err) {</span></div><div class='line dim'><span style=\"color: #24292E\">    console.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(err)</span></div><div class='line dim'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">undefined</span></div><div class='line dim'><span style=\"color: #24292E\">  }</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line'></div><div class='line dim'><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() {</span></div><div class='line highlight'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">val</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">tryFetch</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"https://example.com\"</span><span style=\"color: #24292E\">)</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #6A737D\">//    ^?</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function tryFetch(url: RequestInfo): Promise&lt;any>' >tryFetch</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\"><data-lsp lsp='(parameter) url: RequestInfo' >url</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='type RequestInfo = string | Request' >RequestInfo</data-lsp></span><span style=\"color: #24292E\">) {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const val: any' >val</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise&lt;Response>' >fetch</data-lsp></span><span style=\"color: #24292E\">(<data-lsp lsp='(parameter) url: RequestInfo' >url</data-lsp>)).</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) Body.json(): Promise&lt;any>' >json</data-lsp></span><span style=\"color: #24292E\">()</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> <data-lsp lsp='const val: any' >val</data-lsp></span></div><div class='line'><span style=\"color: #24292E\">  } </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (<data-lsp lsp='(local var) err: unknown' >err</data-lsp>) {</span></div><div class='line'><span style=\"color: #24292E\">    <data-lsp lsp='var console: Console' >console</data-lsp>.</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) Console.error(...data: any[]): void' >error</data-lsp></span><span style=\"color: #24292E\">(<data-lsp lsp='(local var) err: unknown' >err</data-lsp>)</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='var undefined' >undefined</data-lsp></span></div><div class='line'><span style=\"color: #24292E\">  }</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function main(): Promise&lt;void>' >main</data-lsp></span><span style=\"color: #24292E\">() {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const val: any' style='border-bottom: solid 2px lightgrey;'>val</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='function tryFetch(url: RequestInfo): Promise&lt;any>' >tryFetch</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">\"https://example.com\"</span><span style=\"color: #24292E\">)</span></div><div class='meta-line'><span class='popover-prefix'>        </span><span class='popover'><div class='arrow'></div>const val: any</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYAsBWAUAIaICeAdgMagBmArhQC4CWcpo90xAYpPeQBYAKGtAA2qAEqQAjjUiJ6ASVJU4ASlABvPKDYdN2naHIt5oAG4ERoALygCAdwKN6oAQ6cuqPfkNGrVAHQAVogsAqoGOtA8wqwWIgYAvkYEvHyuMNDqWoZGJnAikAGZCAKZEbnR9LGgdAAmkFSMpJB1SXiJeIQkFNR05EwsoAC2TqTh+jrGpKbxNnaOzrpc3oIARHz09AAOKCCQAB4Ew9uFAcbDaxWgILkAegD8HUA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"11\" style=\"position:relative;\"><a href=\"#11\" aria-label=\"11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Book</span><span style=\"color: #24292E\"> {</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">title</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"\"</span></div><div class='line dim'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">author</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"\"</span></div><div class='line dim'><span style=\"color: #24292E\">}</span></div><div class='line highlight'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">keys</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">Object</span><span style=\"color: #24292E\">.</span><span style=\"color: #6F42C1\">keys</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Book</span><span style=\"color: #24292E\">())</span></div><div class='line dim'><span style=\"color: #6A737D\">//      ^?</span></div></code></div></pre>\n<details>\n<summary>Click for answer</summary>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">class</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\"><data-lsp lsp='class Book' >Book</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Book.title: string' >title</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"\"</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Book.author: string' >author</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"\"</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const keys: string[]' style='border-bottom: solid 2px lightgrey;'>keys</data-lsp></span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='var Object: ObjectConstructor' >Object</data-lsp></span><span style=\"color: #24292E\">.</span><span style=\"color: #6F42C1\"><data-lsp lsp='(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)' >keys</data-lsp></span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='constructor Book(): Book' >Book</data-lsp></span><span style=\"color: #24292E\">())</span></div><div class='meta-line'><span class='popover-prefix'>       </span><span class='popover'><div class='arrow'></div>const keys: string[]</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYGwhgzhAEBCD28DW0DeAoa0AuBLbIApgFzQTYBOuAdgObQC80ARM5tGAK7YAW8FpclTqMWbAL7pg8auWhJCATxhMA8gCMAVoWDYAdAuUAKaoQDucREiMBKG+gD0DrC+gA9APxA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>","tableOfContents":"<ul>\n<li><a href=\"#1\">1</a></li>\n<li><a href=\"#2\">2</a></li>\n<li><a href=\"#3\">3</a></li>\n<li><a href=\"#4\">4</a></li>\n<li><a href=\"#5\">5</a></li>\n<li><a href=\"#6\">6</a></li>\n<li><a href=\"#7\">7</a></li>\n<li><a href=\"#8\">8</a></li>\n<li><a href=\"#9\">9</a></li>\n<li><a href=\"#10\">10</a></li>\n<li><a href=\"#11\">11</a></li>\n</ul>","fields":{"slug":"/course/making-typescript-stick/09-guess-that-type/"},"frontmatter":{"title":"Game 3: Guess That Type","course":"making-typescript-stick","date":"March 22, 2022","description":"Turn your brain into a TypeScript compiler with this game\n"}}},"pageContext":{"slug":"/course/making-typescript-stick/09-guess-that-type/","title":"Game 3: Guess That Type","course":"making-typescript-stick","order":9,"previous":{"fields":{"slug":"/course/making-typescript-stick/08-type-challenges/"},"frontmatter":{"title":"Challenge 3: Type Challenges","order":8,"course":"making-typescript-stick","isExercise":null}},"next":{"fields":{"slug":"/course/making-typescript-stick/10-penpal-types/"},"frontmatter":{"title":"Challenge 4: Penpal types","order":10,"course":"making-typescript-stick","isExercise":null}}}},
    "staticQueryHashes": ["2785745750","2841359383"]}