{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/course/full-stack-typescript/03-project-tour/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","name":"TypeScript Fundamentals v3","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"fundamentals-v4","name":"TypeScript Fundamentals v4","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","name":"Intermediate TypeScript v1","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"intermediate-v2","name":"Intermediate TypeScript v2","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"making-typescript-stick","name":"Making TypeScript Stick","summary":"Tackle a series of challenges designed to reinforce your knowledge and make\nthe important concepts truly \"stick\" in your mind.\n"},{"id":"enterprise-v2","name":"Enterprise TypeScript v2","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"},{"id":"full-stack-typescript","name":"Full Stack TypeScript","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"}]}},"markdownRemark":{"id":"0a731e92-539f-5cbd-b0e2-1291b02ac4be","excerpt":"The GitHub repo for the workshop project is here. Project Setup First, if you want to ensure you’re using the correct Node.js and package manager versions…","html":"<p>The GitHub repo for the workshop project is <a href=\"https://github.com/mike-north/full-stack-ts\">here</a>.</p>\n<h2 id=\"project-setup\" style=\"position:relative;\"><a href=\"#project-setup\" aria-label=\"project setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project Setup</h2>\n<p>First, if you want to ensure you’re using the correct Node.js and package manager versions, <a href=\"http://volta.sh\">install Volta</a></p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #6E7781\"># install Volta</span></div><div class='line'><span style=\"color: #24292F\">curl https://get.volta.sh </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> bash</span></div><div class='line'></div><div class='line'><span style=\"color: #6E7781\"># install Node</span></div><div class='line'><span style=\"color: #24292F\">volta install node</span></div></code></div></pre>\n<p>Then, check out a local copy of this repository</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">git clone git@github.com:mike-north/full-stack-ts</span></div><div class='line'><span style=\"color: #0550AE\">cd</span><span style=\"color: #24292F\"> full-stack-typescript</span></div></code></div></pre>\n<p>Next, install the project dependencies</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">yarn</span></div></code></div></pre>\n<p>Build the project for the first time</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">yarn build</span></div></code></div></pre>\n<p>And finally, start the project</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #24292F\">yarn dev</span></div></code></div></pre>\n<p>After the client and server build processes complete, you should see an “imitation Twitter” running on <a href=\"http://localhost:1234\">http://localhost:1234</a>.</p>\n<h2 id=\"project-tour\" style=\"position:relative;\"><a href=\"#project-tour\" aria-label=\"project tour permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project tour</h2>\n<p>There are three top level folders</p>\n<ul>\n<li><code>/client</code> - A React frontend</li>\n<li><code>/server</code> - A Node.js backend</li>\n<li><code>/shared</code> - Code that can be imported by both the frontend and backend</li>\n</ul>\n<p>Each has its own <code>package.json</code>, and we’re using <a href=\"https://classic.yarnpkg.com/lang/en/docs/workspaces/\">yarn workspaces</a>. This is a monorepo, but it’s very simple in terms of tooling and running things.</p>\n<p>Some interesting things to study before we dig in</p>\n<ul>\n<li>The <code>.eslintrc</code> file</li>\n<li>The <code>tsconfig.json</code> files</li>\n<li>The <code>db.json</code> file (this is the data for our database)</li>\n<li>\n<p>Take a look at the entry points for both client and server</p>\n<ul>\n<li><code>/server/src/index.ts</code></li>\n<li><code>/client/src/index.tsx</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"commands-we-can-run-in-this-project\" style=\"position:relative;\"><a href=\"#commands-we-can-run-in-this-project\" aria-label=\"commands we can run in this project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commands we can run in this project</h2>\n<p>You can run the following, either within a sub-project (<code>client</code>, <code>server</code> or <code>shared</code>) or at the\ntop level folder for the repo.</p>\n<ul>\n<li><code>yarn dev</code> “runs the thing”</li>\n<li><code>yarn build</code> “builds the thing”</li>\n<li><code>yarn lint</code> “lints the thing”</li>\n</ul>\n<p>Give these a try.</p>\n<p><strong>Note that running <code>yarn dev</code> in the <code>server</code> component will <em>also</em> build and start the <code>client</code> project</strong>. Effectively this means starting <code>server</code> will start the “whole app”.</p>\n<p>There’s one more command we’ll get into later, but doesn’t work (yet) in the\nstarting point code</p>\n<ul>\n<li><code>yarn codegen</code> “runs all code generation stuff for the thing”</li>\n</ul>\n<h2 id=\"what-state-are-we-in-at-the-start\" style=\"position:relative;\"><a href=\"#what-state-are-we-in-at-the-start\" aria-label=\"what state are we in at the start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What state are we in at the start?</h2>\n<p>On the <code>master</code> branch of the course project,</p>\n<ul>\n<li><code>client</code> runs on <em>all hardcoded data</em> that’s held in top-level module scope of various components. It is built with <a href=\"https://parceljs.org/\">parcel</a></li>\n<li><code>server</code> does not have any kind of API at all, but it has a working data store (built on <a href=\"https://github.com/typicode/lowdb\">lowdb</a>) in <code>./db.ts</code> that you can use to get records of various kinds.</li>\n</ul>\n<h2 id=\"where-will-we-be-by-the-end-of-the-course\" style=\"position:relative;\"><a href=\"#where-will-we-be-by-the-end-of-the-course\" aria-label=\"where will we be by the end of the course permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Where will we be by the end of the course?</h2>\n<ul>\n<li>You’ll be able to create new tweets</li>\n<li>Most of what you see on the screen will be driven by information in the database, and coming from the backend</li>\n<li>You’ll be able to like and un-like tweets</li>\n</ul>\n<h2 id=\"what-wont-we-end-up-having-to-touch-in-this-course\" style=\"position:relative;\"><a href=\"#what-wont-we-end-up-having-to-touch-in-this-course\" aria-label=\"what wont we end up having to touch in this course permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What won’t we end up having to touch in this course?</h2>\n<ul>\n<li>We won’t mess with any CSS</li>\n<li>We won’t have to install any dependencies</li>\n<li>We won’t have to change the typescript config</li>\n<li>We won’t have to worry about how the backend interacts with the database</li>\n</ul>\n<p>Once you’re ready, let’s jump in to the project!</p>","tableOfContents":"<ul>\n<li><a href=\"#project-setup\">Project Setup</a></li>\n<li><a href=\"#project-tour\">Project tour</a></li>\n<li><a href=\"#commands-we-can-run-in-this-project\">Commands we can run in this project</a></li>\n<li><a href=\"#what-state-are-we-in-at-the-start\">What state are we in at the start?</a></li>\n<li><a href=\"#where-will-we-be-by-the-end-of-the-course\">Where will we be by the end of the course?</a></li>\n<li><a href=\"#what-wont-we-end-up-having-to-touch-in-this-course\">What won’t we end up having to touch in this course?</a></li>\n</ul>","fields":{"slug":"/course/full-stack-typescript/03-project-tour/"},"frontmatter":{"title":"Project Tour","course":"full-stack-typescript","date":"March 24, 2022","description":"Let's take a look at the starting point code for our workshop project, a twitter clone\n"}}},"pageContext":{"slug":"/course/full-stack-typescript/03-project-tour/","title":"Project Tour","course":"full-stack-typescript","order":3,"previous":{"fields":{"slug":"/course/full-stack-typescript/02-graphql-intro/"},"frontmatter":{"title":"GraphQL Intro","order":2,"course":"full-stack-typescript","isExercise":null}},"next":{"fields":{"slug":"/course/full-stack-typescript/04-hello-apollo/"},"frontmatter":{"title":"Hello Apollo","order":4,"course":"full-stack-typescript","isExercise":null}}}},
    "staticQueryHashes": ["2785745750","2841359383"]}